version: 2.1
orbs:
  # orgs contain basc recipes and reproducible actions (install node, aws, etc.)
  node: circleci/node@5.0.2
  browser-tools: circleci/browser-tools@1.2.3
  eb: circleci/aws-elastic-beanstalk@2.0.1
  aws-cli: circleci/aws-cli@3.1.1
  # different jobs are calles later in the workflows sections
jobs:
  test:
    docker:
      - image: "cimg/node:16.13.1-browsers"
    environment:
      - NODE_ENV: development
    steps:
      - node/install:
          node-version: "16.15"
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run:
          command: |
            google-chrome --version
            chromedriver --version
          name: Check install

      # Checkout project with submodules
      - checkout
      - run: git submodule sync --recursive
      - run: git submodule update --recursive --init
      - run:
          name: Install Front-End Dependencies
          command: |
            npm run frontend:install
      - run:
          name: Install API Dependencies
          command: |
            npm run api:install
      - run:
          name: Run Tests
          command: |
            echo "Running API Tests"
            npm run api:test
            echo "Running Front-End Tests"
            export CHROME_BIN=/usr/bin/google-chrome
            npm run frontend:test
  build:
    docker:
      # the base image can run most needed actions with orbs
      - image: "cimg/node:16.15"

    steps:
      # install node and checkout code
      - node/install:
          node-version: "16.15"
      # Checkout project with submodules
      - checkout
      - run: git submodule sync --recursive
      - run: git submodule update --recursive --init
      # Use root level package.json to install dependencies in the frontend app
      - run:
          name: Install Front-End Dependencies
          command: |
            echo "NODE --version" 
            echo $(node --version)
            echo "NPM --version" 
            echo $(npm --version)
            npm run frontend:install
      # TODO: Install dependencies in the the backend API
      - run:
          name: Install API Dependencies
          command: |
            echo "TODO: Install dependencies in the the backend API  "
            npm run api:install
      # TODO: Lint the frontend
      - run:
          name: Front-End Lint
          command: |
            echo "TODO: Lint the frontend"
      # TODO: Build the frontend app
      - run:
          name: Front-End Build
          command: |
            echo "TODO: Build the frontend app"
            npm run frontend:build
      # TODO: Build the backend API
      - run:
          name: API Build
          command: |
            echo "TODO: Build the backend API"
            npm run api:build
  # deploy step will run only after manual approval
  deploy:
    docker:
      - image: "cimg/base:stable"
      # more setup needed for aws, node, elastic beanstalk
    steps:
      - node/install:
          node-version: "16.15"
      - eb/setup
      - aws-cli/setup
      - checkout
      - run: git submodule sync --recursive
      - run: git submodule update --recursive --init
      - run:
          name: Deploy App
          # TODO: Install, build, deploy in both apps
          command: |
            echo "# TODO: Install, build, deploy in both apps"
            npm run frontend:install
            npm run api:install
            npm run frontend:build
            npm run api:build
            npm run deploy

workflows:
  Dev-Ops--CircleCi:
    jobs:
      - build
      - test:
          requires:
            - build
      - hold:
          filters:
            branches:
              only:
                - main
          type: approval
          requires:
            - test
      - deploy:
          requires:
            - hold
